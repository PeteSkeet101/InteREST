<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition>(current.sys_updated_by!='System')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Incident update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
gs.info('the sys_updated by is '+current.sys_updated_by);
	// get active end integration end points 
    var groups = new GlideRecord('x_653938_interest_groups');
    groups.addQuery('group', current.assignment_group);
    groups.query();
 
    while (groups.next()) {
        var ep = new GlideRecord('x_653938_interest_target');
        ep.get(groups.remote_system);
		
	// get fields for remote system 
		var fields = new GlideRecord('x_653938_interest_fields');
		fields.addQuery( 'module', current.sys_class_name);
		fields.addQuery('target.name',ep.getValue('name'));
		fields.query();
		while(fields.next()){
			gs.info('looping in the fields for update'+ fields.getValue('field_name'));
		}
		}
	//	gs.info('param 1 should be '+ groups.remote_system.getValue('sys_id'));
        //create event for each remote system end point
		gs.eventQueue('x_653938_interest.incident_open', current, ep.getValue('sys_id'), 0);
}
	
	
// 	if (!(current.short_description==previous.short_description)){
// 	gs.info('short description changed');
	
// 
	

)(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>pete</sys_created_by>
        <sys_created_on>2023-04-17 18:58:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>68fce90997d229503f5e318c1253af6e</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>Incident update</sys_name>
        <sys_overrides/>
        <sys_package display_value="InteREST" source="x_653938_interest">836d672e97ad25103f5e318c1253af3d</sys_package>
        <sys_policy/>
        <sys_scope display_value="InteREST">836d672e97ad25103f5e318c1253af3d</sys_scope>
        <sys_update_name>sys_script_68fce90997d229503f5e318c1253af6e</sys_update_name>
        <sys_updated_by>pete</sys_updated_by>
        <sys_updated_on>2023-05-03 18:24:04</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=68fce90997d229503f5e318c1253af6e"/>
</record_update>
